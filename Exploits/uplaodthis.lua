local ArrayField = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/ArrayField/main/Source.lua'))()

local ESPObjects = {} -- Stores the created ESP elements

local Window = ArrayField:CreateWindow({
   Name = "Roblox Exploit Hub",
   LoadingTitle = "Exploit Hub",
   LoadingSubtitle = "by EinzzCookie",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "ArrayField"
   },
   Discord = {
      Enabled = true,
      Invite = "NYt8Y3SP89", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using ArrayField may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like ArrayField to get the key from
      Actions = {
            [1] = {
                Text = 'Click here to copy the key link <--',
                OnPress = function()
                    print('Pressed')
                end,
                }
            },
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

ArrayField:Notify({
   Title = "Exploit",
   Content = "Exploit started! Please wait...",
   Duration = 4.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
 },
})

Window:Prompt({
   Title = 'Risk Factors',
   SubTitle = '',
   Content = 'By using this exploit you can get banned if you are not carefull enough!',
   Actions = {
       Accept = {
           Name = 'Accept',
           Callback = function()
               print('Pressed')
           end,
       }
   }
})

local Tab = Window:CreateTab("Tab Example", nil) -- Title, Image

local Label = Tab:CreateLabel("Avaible Hacks                Made by @EinzzCookie <---- Discord")

local Section = Tab:CreateSection("",true) -- The 2nd argument is to tell if its only a Title and doesnt contain element


-- Speed
local Slider = Tab:CreateSlider({
   Name = "WalkSpeed",
   Range = {0, 1000},
   Increment = 5,
   Suffix = "Speed",
   CurrentValue = 15,
   Flag = "Speed Slider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

--Jump





-- Infinity Jump Toggle
local JumpToggle = Tab:CreateToggle({
   Name = "Infinite Jump",
   CurrentValue = false,
   Flag = "JumpToggle", -- Use a unique flag for this toggle
   Callback = function(Value) 
      infjmp = Value 
      if infjmp then 
         local function checkLeertaste() 
            while infjmp do 
               if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Space) 
               then 
                  print("Die Leertaste wurde gedrückt!") 
                  local Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid") 
                  Humanoid:ChangeState("Jumping") 
                  wait(0.1) 
                  Humanoid:ChangeState("Seated") 
               else 
                  print("Die Leertaste wurde nicht gedrückt.") 
               end 
               wait() -- Wait for the next frame
            end 
         end 
         checkLeertaste() 
      end 
   end 
})

-- ESP Toggle
local ESPToggle = Tab:CreateToggle({
   Name = "ESP",
   CurrentValue = false,
   Flag = "ESPToggle", -- Use a unique flag name
   Callback = function(Value)
       espEnabled = Value
       if espEnabled then
           CreateESP()
       else
           ClearESP()
       end
   end
})

-- Create an empty table to store references to ESP elements
local espElements = {}

function CreateESP()
   local players = game:GetService("Players")
   local faces = {"Front", "Back", "Bottom", "Left", "Right", "Top"}
   local lplayer = players.LocalPlayer
   local TRANSPARENCY = 0.5

   function CheckPart(obj)
       return (obj:IsA("Part") or obj:IsA("MeshPart")) and obj.Name ~= "HumanoidRootPart"
   end

   function ActualESP(obj)
       for i = 0, 5 do
           local surface = Instance.new("SurfaceGui", obj)
           surface.Face = Enum.NormalId[faces[i + 1]]
           surface.AlwaysOnTop = true

           local frame = Instance.new("Frame", surface)
           frame.Size = UDim2.new(1, 0, 1, 0)
           frame.BorderSizePixel = 0
           frame.BackgroundTransparency = TRANSPARENCY

           -- Check if the player has a valid team and if the team has a color
           if lplayer.Team and lplayer.Team.TeamColor then
               frame.BackgroundColor3 = lplayer.Team.TeamColor.Color
           else
               -- Use a default color if the team or color is not found
               frame.BackgroundColor3 = Color3.new(255, 255, 255) -- Default color (White)
           end

           table.insert(espElements, surface) -- Add the ESP element to the table
       end
   end

   function CreateFlex()
       players.PlayerAdded:Connect(function(p)
           p.CharacterAdded:Connect(function(character)
               ActualESP(character)
           end)
       end)

       for _, p in pairs(players:GetPlayers()) do
           if p ~= lplayer then
               -- Used for Players already in the game
               ActualESP(p.Character)
               p.CharacterAdded:Connect(function(character)
                   ActualESP(character)
               end)
           end
       end
   end

   CreateFlex()
end

function ClearESP()
   for _, espElement in pairs(espElements) do
       espElement:Destroy() -- Remove each ESP element
   end
   espElements = {} -- Clear the table
end



--Fly
-- Fly Toggle
local FlyToggle = Tab:CreateToggle({
   Name = "Fly",
   CurrentValue = false,
   Flag = "FlyToggle", -- Use a unique flag for this toggle
   Callback = function(Value)
      fly = Value

      if fly then
         local function Fly()
            repeat wait()
            until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Head") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
            local mouse = game.Players.LocalPlayer:GetMouse()
            repeat wait() until mouse
            local plr = game.Players.LocalPlayer
            local torso = plr.Character.Head
            local flying = false
            local deb = true
            local ctrl = {f = 0, b = 0, l = 0, r = 0}
            local lastctrl = {f = 0, b = 0, l = 0, r = 0}
            local maxspeed = 100
            local speed = 100
            
            local function Fly()
               local bg = Instance.new("BodyGyro", torso)
               bg.P = 9e4
               bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
               bg.cframe = torso.CFrame
               local bv = Instance.new("BodyVelocity", torso)
               bv.velocity = Vector3.new(0,0.1,0)
               bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
               repeat wait()
                  plr.Character.Humanoid.PlatformStand = true
                  if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                     speed = speed+.5+(speed/maxspeed)
                     if speed > maxspeed then
                        speed = maxspeed
                     end
                  elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                     speed = speed-1
                     if speed < 0 then
                        speed = 0
                     end
                  end
                  if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                     bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                     lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
                  elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                     bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                  else
                     bv.velocity = Vector3.new(0,0.1,0)
                  end
                  bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
               until not flying
               ctrl = {f = 0, b = 0, l = 0, r = 0}
               lastctrl = {f = 0, b = 0, l = 0, r = 0}
               speed = 0
               bg:Destroy()
               bv:Destroy()
               plr.Character.Humanoid.PlatformStand = false
            end

            mouse.KeyDown:connect(function(key)
               if key:lower() == "g" then
                  if flying then
                     flying = false
                  else
                     flying = true
                     Fly()
                  end
               elseif key:lower() == "w" then
                  ctrl.f = 1
               elseif key:lower() == "s" then
                  ctrl.b = -1
               elseif key:lower() == "a" then
                  ctrl.l = -1
               elseif key:lower() == "d" then
                  ctrl.r = 1
               end
            end)

            mouse.KeyUp:connect(function(key)
               if key:lower() == "w" then
                  ctrl.f = 0
               elseif key:lower() == "s" then
                  ctrl.b = 0
               elseif key:lower() == "a" then
                  ctrl.l = 0
               elseif key:lower() == "d" then
                  ctrl.r = 0
               end
            end)
         end

         Fly()
      else
         print("Fly Deactivated")
      end
   end
})

--Tp Click
local Button = Tab:CreateButton({
   Name = "TP-Click",
   Callback = function()
      mouse = game.Players.LocalPlayer:GetMouse()
      tool = Instance.new("Tool")
      tool.RequiresHandle = false
      tool.Name = "TP-Click"
      tool.Activated:connect(function()
      local pos = mouse.Hit+Vector3.new(0,2.5,0)
      pos = CFrame.new(pos.X,pos.Y,pos.Z)
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
      end)
      tool.Parent = game.Players.LocalPlayer.Backpack
   end,
})

local Button = Tab:CreateButton({
   Name = "dTools",
   Callback = function()
      for i=2,4 do
         local btool = Instance.new("HopperBin")
         btool.BinType=i
         btool.Parent=game:service'Players'.LocalPlayer.Backpack
     end
      
     mouse = game:service'Players'.LocalPlayer:GetMouse()
     tool = Instance.new("Tool")
     tool.RequiresHandle = false
     tool.Name = "Unlock tool"
     tool.Activated:connect(function()
         if mouse.Target:IsA("BasePart") then
             mouse.Target.Locked=false
             print("Unlocked "..mouse.Target:GetFullName())
         end
     end)
     tool.Parent = game:service'Players'.LocalPlayer.Backpack
   end,
})



